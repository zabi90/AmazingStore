{"version":3,"sources":["webpack:///src/app/order-place-dialog/order-place-dialog.component.ts","webpack:///src/app/order-place-dialog/order-place-dialog.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/product-list/product-list.component.html","webpack:///src/app/product-list/product-list.component.ts","webpack:///src/app/services/search-text-service.service.ts","webpack:///src/app/product-service.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/models/orderDetail.ts","webpack:///src/app/app.module.ts","webpack:///src/app/product-detail-alert/product-detail-alert.component.ts","webpack:///src/app/product-detail-alert/product-detail-alert.component.html","webpack:///src/app/shopping-cart/shopping-cart.component.ts","webpack:///src/app/shopping-cart/shopping-cart.component.html","webpack:///src/app/top-bar/top-bar.component.ts","webpack:///src/app/top-bar/top-bar.component.html","webpack:///src/app/services/cart-service.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["OrderPlaceDialogComponent","selector","templateUrl","styleUrls","environment","production","ProductListComponent","productService","cartService","searchTextService","durationInSeconds","errorMessage","dialogState","isLoading","products","temporyList","subscribleSearchTextChange","subscribe","value","splice","length","forEach","item","push","productItem","title","includes","console","log","getProducts","product","addItem","showDialog","getProductList","response","SearchTextServiceService","searchText","searchTextSubject","next","providedIn","BASE_URL","PRODUCT_END_POINT","ProductServiceService","httpClient","isError","Array","get","pipe","handleError","fetch","respnose","json","body","operation","result","error","message","AppComponent","OrderDetail","name","email","address","cartItems","AppModule","declarations","imports","providers","bootstrap","ProductDetailAlertComponent","newItemEvent","emit","block","ShoppingCartComponent","dialog","router","orderDetails","cartList","total","getTotal","orderDetail","JSON","stringify","openDialog","clearItems","dialogRef","open","afterClosed","navigate","removeItem","TopBarComponent","shouldSearchVisible","cartCount","routeEvent","onSearchTextChanged","events","e","url","showCartItemsCount","subject","v","CartServiceService","_snackBar","action","duration","openSnackBar","price","index","findIndex","x","id","routes","path","component","AppRoutingModule","forRoot","exports","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-order-place-dialog',\r\n  templateUrl: './order-place-dialog.component.html',\r\n  styleUrls: ['./order-place-dialog.component.css']\r\n})\r\nexport class OrderPlaceDialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Amazing Store</h1>\r\n<div mat-dialog-content>\r\n    <div class=\"row justify-content-center\">\r\n        <i class=\"fa fa-check-circle fa-5x\" aria-hidden=\"true\" style=\"color: #6660d3;\"></i>\r\n    </div>\r\n    <div class=\"row justify-content-center\">\r\n        Your order has been placed successfully. Thank you for choosing Amazing Store\r\n    </div>\r\n</div>\r\n\r\n<div mat-dialog-actions class=\"row justify-content-center\">\r\n    <button mat-button mat-dialog-close>OK</button>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<div class=\"row\">\r\n    <div class=\"col-3\">\r\n        <!-- <div class=\"row justify-content-center\">\r\n            <div class=\"card\" style=\"width: 18rem;\">\r\n                <div class=\"card-header\">\r\n                    Featured\r\n                </div>\r\n                <ul class=\"list-group list-group-flush\">\r\n                    <li class=\"list-group-item\">Cras justo odio</li>\r\n                    <li class=\"list-group-item\">Dapibus ac facilisis in</li>\r\n                    <li class=\"list-group-item\">Vestibulum at eros</li>\r\n                </ul>\r\n            </div>\r\n        </div> -->\r\n\r\n    </div>\r\n    <div class=\"col-7 main-content\">\r\n        <div class=\"row\">\r\n            <h3>Products</h3>\r\n        </div>\r\n        <hr />\r\n        <!--main product view-->\r\n\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col\" *ngFor=\"let product of products;\">\r\n\r\n                <div class=\"card card-layout cardhiglight\" style=\"width: 14rem;\">\r\n\r\n                    <a (click)=\"navigateToDetail(product)\"><img class=\"card-img-top card-image\" src={{product.image}} alt=\"Card image cap\" /></a>\r\n\r\n                    <div class=\"card-body\">\r\n                        <p class=\"card-text text-truncate\">\r\n                            {{product.title}}\r\n                        </p>\r\n                        <div class=\"row justify-content-center\">\r\n                            <button class=\"btn add-cart-button\" (click)=\"addToCart(product)\">Add to Cart</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <div *ngIf=\"productService.isError\">\r\n            <small style=\"color: red;\">{{productService.errorMessage}}</small>\r\n        </div>\r\n        <div *ngIf=\"(products.length == 0 && !isLoading)\" class=\"row justify-content-center\">\r\n            <h2>No products available.</h2>\r\n        </div>\r\n        <div *ngIf=\"isLoading\" class=\"row justify-content-center\">\r\n            <mat-spinner [diameter]=40 style=\"margin-top: 30%;\"></mat-spinner>\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"col-2\">\r\n\r\n    </div>\r\n</div>\r\n\r\n<app-product-detail-alert [display]=\"dialogState\" (newItemEvent)=\"showDialog($event)\" [productData]=\"product\"></app-product-detail-alert>","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { ProductServiceService } from '../product-service.service';\r\nimport { CartServiceService } from '../services/cart-service.service';\r\nimport {Product} from '../models/product';\r\n\r\nimport {SearchTextServiceService } from '../services/search-text-service.service'\r\n@Component({\r\n  selector: 'app-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.css'],\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n  durationInSeconds = 3;\r\n  errorMessage = \"\";\r\n  dialogState : string =\"none\";\r\n  product:Product;\r\n  isLoading:boolean = true;\r\n  products:Product [] = [];\r\n  temporyList:Product [] = [];\r\n  constructor(public productService:ProductServiceService,private cartService:CartServiceService,private searchTextService : SearchTextServiceService) { \r\n    //this.loadProduct();\r\n    this.searchTextService.subscribleSearchTextChange().subscribe((value)=>{\r\n \r\n      this.products.splice(0,this.products.length)\r\n\r\n      if(value === ''){\r\n        \r\n        this.temporyList.forEach((item)=>{\r\n          this.products.push(item)\r\n        })\r\n\r\n      }else{\r\n        this.temporyList.forEach((productItem)=>{\r\n         \r\n            if(productItem.title.includes(value)){\r\n                //find\r\n                this.products.push(productItem)\r\n                console.log(\"Product search \"+productItem.title)\r\n            }\r\n        })\r\n      }\r\n    \r\n    });\r\n  }\r\n\r\n  private async loadProduct() {\r\n    this.isLoading = true;\r\n    this.products = await this.productService.getProducts();\r\n    this.isLoading = false;\r\n  }\r\n \r\n  addToCart(product:Product){\r\n    this.cartService.addItem(product)\r\n  }\r\n  navigateToDetail(product:Product){\r\n    this.product = product;\r\n    this.showDialog(\"block\");\r\n  }\r\n\r\n  showDialog(value:string){\r\n    this.dialogState = value;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoading = true;\r\n    this.productService.getProductList().subscribe((response:Product[])=>{\r\n      \r\n      response.forEach((item)=>{\r\n        this.products.push(item)\r\n        this.temporyList.push(item)\r\n      })\r\n      \r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable,from, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchTextServiceService {\r\n\r\n private searchText:string =\"\"\r\n private searchTextSubject :BehaviorSubject<string>\r\n\r\n  constructor() {\r\n    this.searchTextSubject = new BehaviorSubject(this.searchText);\r\n   }\r\n\r\n  onSearchTextChanged(value:string){\r\n    this.searchText = value\r\n    this.searchTextSubject.next( this.searchText)\r\n  }\r\n\r\n  subscribleSearchTextChange(){\r\n    return this.searchTextSubject;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { Observable,of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport {Product} from './models/product';\r\n\r\nconst BASE_URL: string = \"http://private-ba0621-dummy95.apiary-mock.com/products\";\r\nconst PRODUCT_END_POINT: string = \"products\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductServiceService {\r\n \r\n  isError = false;\r\n  errorMessage = \"\";\r\n\r\n  products = new Array();\r\n  constructor(private httpClient: HttpClient) {\r\n\r\n  }\r\n\r\n  public getProductList() {\r\n    return this.httpClient.get<Product[]>(\"https://fakestoreapi.com/products\")\r\n    .pipe(\r\n      catchError(this.handleError<Product[]>('productList',[]))\r\n    );\r\n  }\r\n  public async getProducts(): Promise<any> {\r\n    const respnose = await fetch(\"https://fakestoreapi.com/products\");\r\n    const body = await respnose.json();\r\n    this.products = body;\r\n    return body;\r\n  }\r\n\r\n  /**\r\n * Handle Http operation that failed.\r\n * Let the app continue.\r\n * @param operation - name of the operation that failed\r\n * @param result - optional value to return as the observable result\r\n */\r\nprivate handleError<T>(operation = 'operation', result?: T) {\r\n  return (error: any): Observable<T> => {\r\n    this.isError = true;\r\n    this.errorMessage = error.message;\r\n    // TODO: send the error to remote logging infrastructure\r\n    console.error(error); // log to console instead\r\n\r\n    // TODO: better job of transforming error for user consumption\r\n    console.log(`${operation} failed: ${error.message}`);\r\n    // Let the app keep running by returning an empty result.\r\n    return of(result as T);\r\n  };\r\n}\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent  {\r\n  title = 'hello-world';\r\n}\r\n","<app-top-bar></app-top-bar>\r\n<router-outlet></router-outlet>","import {Product} from  './product';\r\n\r\nexport class  OrderDetail{\r\n    constructor(public name:string, public email:string, public address:string, public cartItems: Product[]){\r\n    }\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { TopBarComponent } from './top-bar/top-bar.component';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ShoppingCartComponent } from './shopping-cart/shopping-cart.component';\r\n\r\nimport {ProductServiceService} from './product-service.service';\r\nimport {CartServiceService} from './services/cart-service.service';\r\nimport { ProductDetailAlertComponent } from './product-detail-alert/product-detail-alert.component';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { OrderPlaceDialogComponent } from './order-place-dialog/order-place-dialog.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TopBarComponent,\r\n    ProductListComponent,\r\n    ShoppingCartComponent,\r\n    ProductDetailAlertComponent,\r\n    OrderPlaceDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MatProgressSpinnerModule,\r\n    MatSnackBarModule,\r\n    MatDialogModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    ProductServiceService,\r\n    CartServiceService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input,Output, EventEmitter } from '@angular/core';\r\nimport { CartServiceService } from '../services/cart-service.service';\r\n\r\n@Component({\r\n  selector: 'app-product-detail-alert',\r\n  templateUrl: './product-detail-alert.component.html',\r\n  styleUrls: ['./product-detail-alert.component.css']\r\n})\r\nexport class ProductDetailAlertComponent implements OnInit {\r\n \r\n\r\n  @Output() newItemEvent = new EventEmitter<string>();\r\n\r\n  @Input('display') block:string;\r\n\r\n  @Input('productData') product:any;\r\n\r\n  constructor(private cartService:CartServiceService) { \r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  addItemToCart(product:any){\r\n    this.cartService.addItem(product);\r\n  }\r\n\r\n  close(){\r\n    this.newItemEvent.emit('none');\r\n  }\r\n\r\n}\r\n","<!-- The Modal -->\r\n<div [style.display]=\"block\" id=\"myModal\" class=\"modal\">\r\n\r\n    <!-- Modal content -->\r\n    <div class=\"modal-content\" *ngIf=\"product\">\r\n        <span (click)=\"close()\" class=\"close\">&times;</span>\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-4\">\r\n                    <img style=\"width: 100%; height: 100%; object-fit: cover;\" src={{product.image}}/>\r\n                </div>\r\n                <div class=\"col-xl-8\">\r\n                    <h2>{{product.title}}</h2>\r\n                    <p>\r\n                        {{product.description}}\r\n                    </p>\r\n                    <p class=\"price\">\r\n                        {{product.price}}.Rs\r\n                    </p>\r\n                    <button (click)=\"addItemToCart(product)\" class=\"btn cart-btn\" style=\"width: 100%;\">Add to Cart</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { CartServiceService } from '../services/cart-service.service';\r\nimport {OrderDetail} from '../models/orderDetail';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {OrderPlaceDialogComponent} from '../order-place-dialog/order-place-dialog.component'\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-shopping-cart',\r\n  templateUrl: './shopping-cart.component.html',\r\n  styleUrls: ['./shopping-cart.component.css']\r\n})\r\nexport class ShoppingCartComponent implements OnInit {\r\n  \r\n  \r\n  cartList:any;\r\n  total:number;\r\n  orderDetails : string =\"\";\r\n  orderDetail: OrderDetail;\r\n\r\n  constructor(private cartService : CartServiceService,public dialog: MatDialog,private router:Router) { \r\n    this.cartList = cartService.cartList;\r\n    this.total = cartService.getTotal();\r\n    this.orderDetail = new OrderDetail(\"\",\"\",\"\", this.cartList);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  placeOrder(){\r\n    debugger;\r\n    this.orderDetails = JSON.stringify(this.orderDetail);\r\n    this.openDialog()\r\n    this.cartService.clearItems()\r\n  }\r\n\r\n  openDialog() {\r\n    let dialogRef  = this.dialog.open(OrderPlaceDialogComponent);\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.router.navigate(['/']);\r\n    });\r\n  }\r\n\r\n  onNameChanged(name:string){\r\n    \r\n  }\r\n\r\n  onEmailChanged(email:string){\r\n\r\n  }\r\n\r\n  onAddressChanged(address:string){\r\n   \r\n  }\r\n\r\n  onRemove(item:any){\r\n    this.cartService.removeItem(item)\r\n    this.total = this.cartService.getTotal();\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <div *ngIf=\"cartList.length > 0; then cartItems else noItems\"></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Using template approch-->\r\n\r\n<ng-template #cartItems>\r\n\r\n    <div class=\"row\">\r\n\r\n        <table class=\"table\" style=\"margin-top: 16px;\">\r\n            <thead class=\"thead-blue\">\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Product</th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Price</th>\r\n                    <th scope=\"col\"></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let cartItem of cartList;\">\r\n                <tr>\r\n                    <th class=\"td\" scope=\"row\">{{cartItem.id}}</th>\r\n                    <td class=\"td\"><img src={{cartItem.image}} class=\"table-image\" /></td>\r\n                    <td class=\"td\">{{cartItem.title}}</td>\r\n                    <td class=\"td\">{{cartItem.price}}.Rs</td>\r\n                    <td class=\"td\"><span class=\"remove-icon\" (click)=\"onRemove(cartItem)\"><i class=\"fa fa-trash\" style=\"color:red\" aria-hidden=\"true\"></i></span></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n    <div class=\"row justify-content-end\" style=\"margin-right:16px;\">\r\n        <div>\r\n            <h2>Total</h2>\r\n            <h3>{{total}}.Rs</h3>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row justify-content-center\" style=\"margin-bottom: 5%;\">\r\n        <!-- {{userFrom.value|json}}\r\n        <br> {{orderDetail| json}} -->\r\n        <div class=\"col-md-6\">\r\n            <form #userFrom=\"ngForm\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"nameField\">Name</label>\r\n                    <input [(ngModel)]=\"orderDetail.name\" #name=\"ngModel\" name=\"name\" type=\"text\" required minlength=\"3\" maxlength=\"10\" (change)=\"onNameChanged(name.value)\" class=\"form-control\" id=\"nameField\" placeholder=\"Enter your name\" />\r\n                    <div class=\"error-message\" *ngIf=\"name.touched && !name.valid\">\r\n                        <small *ngIf=\"name.errors.required\">Please enter your name.</small>\r\n                        <small *ngIf=\"name.errors.minlength\">Name length atleast {{name.errors.minlength.requiredLength}} characters.</small>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"emailField\">Email</label>\r\n                    <input [(ngModel)]=\"orderDetail.email\" #email=\"ngModel\" required pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" name=\"email\" required type=\"email\" name=\"email\" (change)=\"onEmailChanged(email.value)\" class=\"form-control\" id=\"emailField\" placeholder=\"Enter your email\"\r\n                    />\r\n                    <div class=\"error-message\" *ngIf=\"email.touched && !email.valid\">\r\n                        <small *ngIf=\"email.errors.required\">Please enter your email.</small>\r\n                        <small *ngIf=\"email.errors.pattern\">Please enter valid email.</small>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"addressField\">Address-Details</label>\r\n                    <textarea [(ngModel)]=\"orderDetail.address\" #address=\"ngModel\" required maxlength=\"100\" name=\"address\" required row=\"5\" name=\"address\" (change)=\"onAddressChanged(address.value)\" class=\"form-control\" id=\"addressField\" placeholder=\"Enter your address details\"></textarea>\r\n                    <div class=\"error-message\" *ngIf=\"address.touched && !address.valid\">\r\n                        <small *ngIf=\"address.errors.required\">Please enter your address.</small>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row justify-content-center\">\r\n                    <button [disabled]=\"!userFrom.form.valid\" (click)=\"(name.valid && email.valid && address.valid) ? placeOrder() : isError = true \" type=\"button\" class=\"btn add-cart-button\">Place Order</button>\r\n                </div>\r\n                <div class=\"error-message\" *ngIf=\"!userFrom.form.valid\">\r\n                    <p>Please fill the reqiured data.</p>\r\n                </div>\r\n                <!-- <div>\r\n                    {{orderDetails}}\r\n                </div> -->\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #noItems>\r\n    <div class=\"row justify-content-center\" style=\"margin-top: 20%;\">\r\n        <span><i class=\"fa fa-shopping-cart fa-5x\" aria-hidden=\"true\" style=\"color: #6660d3;\"></i></span>\r\n    </div>\r\n    <div class=\"row justify-content-center\">\r\n        <h2>You have not any item in cart.</h2>\r\n    </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { CartServiceService } from '../services/cart-service.service';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport {SearchTextServiceService} from '../services/search-text-service.service'\r\n\r\n@Component({\r\n  selector: 'app-top-bar',\r\n  templateUrl: './top-bar.component.html',\r\n  styleUrls: ['./top-bar.component.css']\r\n})\r\nexport class TopBarComponent implements OnInit {\r\n  \r\n \r\n  searchText:string = \"\" \r\n  shouldSearchVisible = true;\r\n  cartCount = 0;\r\n\r\n  constructor(private cartService : CartServiceService,private searchTextService :SearchTextServiceService,router: Router ) { \r\n    this.routeEvent(router);\r\n  \r\n  }\r\n\r\n  onSearchValueChanged(){\r\n    this.searchTextService.onSearchTextChanged(this.searchText)\r\n  }\r\n\r\n  routeEvent(router: Router){\r\n    router.events.subscribe(e => {\r\n      if(e instanceof NavigationEnd){\r\n        console.log(e)\r\n        if(e.url === '/product-list' || e.url === '/'){\r\n          this.shouldSearchVisible = true\r\n        }else{\r\n          this.shouldSearchVisible = false;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.showCartItemsCount()\r\n  }\r\n\r\n  private showCartItemsCount(){\r\n    this.cartService.subject.subscribe({\r\n      next: (v) => this.cartCount = v\r\n    });\r\n  }\r\n}\r\n","<div class=\"header-line\"></div>\r\n<!--navigation view-->\r\n<nav class=\"navbar sticky-top navbar-expand-lg navbar-main navbar-bg-color\">\r\n    <a class=\"navbar-brand\" style=\"color: black; float: right; width: 25%;\" href=\"#\">Amazing Store\r\n    </a>\r\n    <button class=\"navbar-toggler custom-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n\r\n        <div class=\"navbar-nav\" style=\"width: 50%;\">\r\n            <a class=\"nav-item nav-link nav-link-black\" href=\"#\">\r\n                <i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i> My city: <span style=\"color: cornflowerblue;\">Sialkot</span></a>\r\n            <a class=\"nav-item nav-link nav-link-black\" href=\"#\">\r\n                <i class=\"fa fa-phone\" aria-hidden=\"true\"></i> +9203310202020\r\n            </a>\r\n\r\n        </div>\r\n\r\n        <div class=\"navbar-nav\">\r\n\r\n            <a class=\"nav-item nav-link navigation\" routerLink=\"/product-list\" routerLinkActive=\"active\">Products</a>\r\n            <a class=\"nav-item nav-link navigation\">Shipping</a>\r\n            <a class=\"nav-item nav-link navigation\">Company</a>\r\n            <a class=\"nav-item nav-link navigation\">My Account</a>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</nav>\r\n\r\n<!--search row-->\r\n<div class=\"row navbar-bg-color\" style=\"padding-bottom: 1%; padding-top: 2%;\">\r\n    <div class=\"container\">\r\n        <ul class=\"nav justify-content-center\">\r\n\r\n            <li class=\"nav-item\" style=\"width: 80%;\">\r\n                <div class=\"row justify-content-center\">\r\n                    <input [(ngModel)]=\"searchText\" #search=\"ngModel\" name=\"search\" *ngIf=\"shouldSearchVisible\" (ngModelChange)=\"onSearchValueChanged()\" class=\"form-control\" type=\"input\" placeholder=\"Search products by SKU or name\" aria-label=\"Search products by SKU or name\"\r\n                        style=\"width: 80%;\" />\r\n                </div>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n                <a class=\"btn cart-btn\" routerLink=\"/shopping-cart\" routerLinkActive=\"active\">\r\n                    <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i>\r\n                    <span style=\"padding: 8px;\">My Cart</span>\r\n                    <span>({{cartCount}})</span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable,from, Subject } from 'rxjs';\r\nimport {Product} from '../models/product'; \r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartServiceService {\r\n\r\n  subject : Subject<number>;\r\n\r\n  cartList = new Array<Product>();\r\n\r\n  constructor(private _snackBar: MatSnackBar) { \r\n    this.subject = new Subject();\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this._snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  addItem(item:Product){\r\n    this.cartList.push(item);\r\n    this.subject.next( this.cartList.length);\r\n    this.openSnackBar(item.title+\" added into cart.\",\"OK\");\r\n  }\r\n\r\n  getTotal(){\r\n    let total = 0;\r\n    this.cartList.forEach((item:Product)=>{\r\n        total = item.price + total;\r\n    })\r\n    return total;\r\n  }\r\n\r\n  removeItem(item:Product){\r\n   \r\n    let index  = this.cartList.findIndex(x => x.id == item.id);\r\n    this.cartList.splice(index,1)\r\n    this.subject.next( this.cartList.length);\r\n    this.openSnackBar(item.title+\" removed from cart.\",\"OK\");\r\n  }\r\n\r\n  clearItems(){\r\n    this.cartList.splice(0,this.cartList.length)\r\n    this.subject.next( this.cartList.length);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {ShoppingCartComponent} from './shopping-cart/shopping-cart.component';\r\nimport {ProductListComponent} from './product-list/product-list.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:ProductListComponent},\r\n  {path:'product-list',component:ProductListComponent},\r\n  {path:'shopping-cart',component:ShoppingCartComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}